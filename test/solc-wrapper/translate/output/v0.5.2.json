{"contracts":{"MyContract":{"NewContract":{"abi":[{"constant":false,"inputs":[{"name":"a","type":"uint8"}],"name":"f","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"devdoc":{"methods":{}},"evm":{"assembly":"    /* \"MyContract\":195:332  contract NewContract {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"MyContract\":195:332  contract NewContract {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MyContract\":195:332  contract NewContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"MyContract\":195:332  contract NewContract {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      div(calldataload(0x00), 0x0100000000000000000000000000000000000000000000000000000000)\n      0x3120d434\n      dup2\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MyContract\":226:326  function f(uint8 a) public returns (bool) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_5:\n      pop\n        /* \"MyContract\":226:326  function f(uint8 a) public returns (bool) {... */\n      calldataload\n      0xff\n      and\n      tag_6\n      jump\t// in\n    tag_4:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n    tag_6:\n        /* \"MyContract\":262:266  bool */\n      0x00\n        /* \"MyContract\":289:299  OldLibrary */\n      linkerSymbol(\"56d61fd7181b570ddfb4cdc41058f758a9cbbcee1fb1d7805a728f4b850b05c2\")\n        /* \"MyContract\":289:312  OldLibrary.someFunction */\n      0x5a64ce09\n        /* \"MyContract\":313:314  a */\n      dup4\n        /* \"MyContract\":289:315  OldLibrary.someFunction(a) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x0100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"MyContract\":289:315  OldLibrary.someFunction(a) */\n      pop\n      gas\n      delegatecall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"MyContract\":289:315  OldLibrary.someFunction(a) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n      pop\n        /* \"MyContract\":289:315  OldLibrary.someFunction(a) */\n      mload\n      swap3\n        /* \"MyContract\":226:326  function f(uint8 a) public returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582026ad7a7dcba0abc53c94dfe05e4119ddf9734bac07d96ad3aa6da2c15d6067260029\n}\n","bytecode":{"linkReferences":{"MyContract":{"OldLibrary":[{"length":20,"start":164}]}},"object":"608060405234801561001057600080fd5b50610151806100206000396000f3fe608060405234801561001057600080fd5b5060043610610047577c010000000000000000000000000000000000000000000000000000000060003504633120d434811461004c575b600080fd5b61006c6004803603602081101561006257600080fd5b503560ff16610080565b604080519115158252519081900360200190f35b600073__$56d61fd7181b570ddfb4cdc41058f758a9$__635a64ce09836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260ff1660ff16815260200191505060206040518083038186803b1580156100f357600080fd5b505af4158015610107573d6000803e3d6000fd5b505050506040513d602081101561011d57600080fd5b50519291505056fea165627a7a7230582026ad7a7dcba0abc53c94dfe05e4119ddf9734bac07d96ad3aa6da2c15d6067260029","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x47 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x3120D434 DUP2 EQ PUSH2 0x4C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x80 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x5A64CE09 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x107 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0x26 0xad PUSH27 0x7DCBA0ABC53C94DFE05E4119DDF9734BAC07D96AD3AA6DA2C15D60 PUSH8 0x2600290000000000 ","sourceMap":"195:137:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;195:137:0;;;;;;;"},"deployedBytecode":{"linkReferences":{"MyContract":{"OldLibrary":[{"length":20,"start":132}]}},"object":"608060405234801561001057600080fd5b5060043610610047577c010000000000000000000000000000000000000000000000000000000060003504633120d434811461004c575b600080fd5b61006c6004803603602081101561006257600080fd5b503560ff16610080565b604080519115158252519081900360200190f35b600073__$56d61fd7181b570ddfb4cdc41058f758a9$__635a64ce09836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260ff1660ff16815260200191505060206040518083038186803b1580156100f357600080fd5b505af4158015610107573d6000803e3d6000fd5b505050506040513d602081101561011d57600080fd5b50519291505056fea165627a7a7230582026ad7a7dcba0abc53c94dfe05e4119ddf9734bac07d96ad3aa6da2c15d6067260029","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x47 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x3120D434 DUP2 EQ PUSH2 0x4C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x80 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x5A64CE09 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x107 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0x26 0xad PUSH27 0x7DCBA0ABC53C94DFE05E4119DDF9734BAC07D96AD3AA6DA2C15D60 PUSH8 0x2600290000000000 ","sourceMap":"195:137:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;195:137:0;;;;;;;;;;;;;;;;;;;226:100;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;226:100:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;262:4;289:10;:23;313:1;289:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;289:26:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;289:26:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;289:26:0;;226:100;-1:-1:-1;;226:100:0:o"},"gasEstimates":{"creation":{"codeDepositCost":"67400","executionCost":"117","totalCost":"67517"},"external":{"f(uint8)":"infinite"}},"legacyAssembly":{".code":[{"begin":195,"end":332,"name":"PUSH","value":"80"},{"begin":195,"end":332,"name":"PUSH","value":"40"},{"begin":195,"end":332,"name":"MSTORE"},{"begin":195,"end":332,"name":"CALLVALUE"},{"begin":8,"end":17,"name":"DUP1"},{"begin":5,"end":7,"name":"ISZERO"},{"begin":5,"end":7,"name":"PUSH [tag]","value":"1"},{"begin":5,"end":7,"name":"JUMPI"},{"begin":30,"end":31,"name":"PUSH","value":"0"},{"begin":27,"end":28,"name":"DUP1"},{"begin":20,"end":32,"name":"REVERT"},{"begin":5,"end":7,"name":"tag","value":"1"},{"begin":5,"end":7,"name":"JUMPDEST"},{"begin":195,"end":332,"name":"POP"},{"begin":195,"end":332,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":195,"end":332,"name":"DUP1"},{"begin":195,"end":332,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":195,"end":332,"name":"PUSH","value":"0"},{"begin":195,"end":332,"name":"CODECOPY"},{"begin":195,"end":332,"name":"PUSH","value":"0"},{"begin":195,"end":332,"name":"RETURN"}],".data":{"0":{".auxdata":"a165627a7a7230582026ad7a7dcba0abc53c94dfe05e4119ddf9734bac07d96ad3aa6da2c15d6067260029",".code":[{"begin":195,"end":332,"name":"PUSH","value":"80"},{"begin":195,"end":332,"name":"PUSH","value":"40"},{"begin":195,"end":332,"name":"MSTORE"},{"begin":195,"end":332,"name":"CALLVALUE"},{"begin":8,"end":17,"name":"DUP1"},{"begin":5,"end":7,"name":"ISZERO"},{"begin":5,"end":7,"name":"PUSH [tag]","value":"1"},{"begin":5,"end":7,"name":"JUMPI"},{"begin":30,"end":31,"name":"PUSH","value":"0"},{"begin":27,"end":28,"name":"DUP1"},{"begin":20,"end":32,"name":"REVERT"},{"begin":5,"end":7,"name":"tag","value":"1"},{"begin":5,"end":7,"name":"JUMPDEST"},{"begin":195,"end":332,"name":"POP"},{"begin":195,"end":332,"name":"PUSH","value":"4"},{"begin":195,"end":332,"name":"CALLDATASIZE"},{"begin":195,"end":332,"name":"LT"},{"begin":195,"end":332,"name":"PUSH [tag]","value":"2"},{"begin":195,"end":332,"name":"JUMPI"},{"begin":195,"end":332,"name":"PUSH","value":"100000000000000000000000000000000000000000000000000000000"},{"begin":195,"end":332,"name":"PUSH","value":"0"},{"begin":195,"end":332,"name":"CALLDATALOAD"},{"begin":195,"end":332,"name":"DIV"},{"begin":195,"end":332,"name":"PUSH","value":"3120D434"},{"begin":195,"end":332,"name":"DUP2"},{"begin":195,"end":332,"name":"EQ"},{"begin":195,"end":332,"name":"PUSH [tag]","value":"3"},{"begin":195,"end":332,"name":"JUMPI"},{"begin":195,"end":332,"name":"tag","value":"2"},{"begin":195,"end":332,"name":"JUMPDEST"},{"begin":195,"end":332,"name":"PUSH","value":"0"},{"begin":195,"end":332,"name":"DUP1"},{"begin":195,"end":332,"name":"REVERT"},{"begin":226,"end":326,"name":"tag","value":"3"},{"begin":226,"end":326,"name":"JUMPDEST"},{"begin":226,"end":326,"name":"PUSH [tag]","value":"4"},{"begin":226,"end":326,"name":"PUSH","value":"4"},{"begin":226,"end":326,"name":"DUP1"},{"begin":226,"end":326,"name":"CALLDATASIZE"},{"begin":226,"end":326,"name":"SUB"},{"begin":13,"end":15,"name":"PUSH","value":"20"},{"begin":8,"end":11,"name":"DUP2"},{"begin":5,"end":16,"name":"LT"},{"begin":2,"end":4,"name":"ISZERO"},{"begin":2,"end":4,"name":"PUSH [tag]","value":"5"},{"begin":2,"end":4,"name":"JUMPI"},{"begin":29,"end":30,"name":"PUSH","value":"0"},{"begin":26,"end":27,"name":"DUP1"},{"begin":19,"end":31,"name":"REVERT"},{"begin":2,"end":4,"name":"tag","value":"5"},{"begin":2,"end":4,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":226,"end":326,"name":"CALLDATALOAD"},{"begin":226,"end":326,"name":"PUSH","value":"FF"},{"begin":226,"end":326,"name":"AND"},{"begin":226,"end":326,"name":"PUSH [tag]","value":"6"},{"begin":226,"end":326,"name":"JUMP","value":"[in]"},{"begin":226,"end":326,"name":"tag","value":"4"},{"begin":226,"end":326,"name":"JUMPDEST"},{"begin":226,"end":326,"name":"PUSH","value":"40"},{"begin":226,"end":326,"name":"DUP1"},{"begin":226,"end":326,"name":"MLOAD"},{"begin":226,"end":326,"name":"SWAP2"},{"begin":226,"end":326,"name":"ISZERO"},{"begin":226,"end":326,"name":"ISZERO"},{"begin":226,"end":326,"name":"DUP3"},{"begin":226,"end":326,"name":"MSTORE"},{"begin":226,"end":326,"name":"MLOAD"},{"begin":226,"end":326,"name":"SWAP1"},{"begin":226,"end":326,"name":"DUP2"},{"begin":226,"end":326,"name":"SWAP1"},{"begin":226,"end":326,"name":"SUB"},{"begin":226,"end":326,"name":"PUSH","value":"20"},{"begin":226,"end":326,"name":"ADD"},{"begin":226,"end":326,"name":"SWAP1"},{"begin":226,"end":326,"name":"RETURN"},{"begin":226,"end":326,"name":"tag","value":"6"},{"begin":226,"end":326,"name":"JUMPDEST"},{"begin":262,"end":266,"name":"PUSH","value":"0"},{"begin":289,"end":299,"name":"PUSHLIB","value":"MyContract:OldLibrary"},{"begin":289,"end":312,"name":"PUSH","value":"5A64CE09"},{"begin":313,"end":314,"name":"DUP4"},{"begin":289,"end":315,"name":"PUSH","value":"40"},{"begin":289,"end":315,"name":"MLOAD"},{"begin":289,"end":315,"name":"DUP3"},{"begin":289,"end":315,"name":"PUSH","value":"FFFFFFFF"},{"begin":289,"end":315,"name":"AND"},{"begin":289,"end":315,"name":"PUSH","value":"100000000000000000000000000000000000000000000000000000000"},{"begin":289,"end":315,"name":"MUL"},{"begin":289,"end":315,"name":"DUP2"},{"begin":289,"end":315,"name":"MSTORE"},{"begin":289,"end":315,"name":"PUSH","value":"4"},{"begin":289,"end":315,"name":"ADD"},{"begin":289,"end":315,"name":"DUP1"},{"begin":289,"end":315,"name":"DUP3"},{"begin":289,"end":315,"name":"PUSH","value":"FF"},{"begin":289,"end":315,"name":"AND"},{"begin":289,"end":315,"name":"PUSH","value":"FF"},{"begin":289,"end":315,"name":"AND"},{"begin":289,"end":315,"name":"DUP2"},{"begin":289,"end":315,"name":"MSTORE"},{"begin":289,"end":315,"name":"PUSH","value":"20"},{"begin":289,"end":315,"name":"ADD"},{"begin":289,"end":315,"name":"SWAP2"},{"begin":289,"end":315,"name":"POP"},{"begin":289,"end":315,"name":"POP"},{"begin":289,"end":315,"name":"PUSH","value":"20"},{"begin":289,"end":315,"name":"PUSH","value":"40"},{"begin":289,"end":315,"name":"MLOAD"},{"begin":289,"end":315,"name":"DUP1"},{"begin":289,"end":315,"name":"DUP4"},{"begin":289,"end":315,"name":"SUB"},{"begin":289,"end":315,"name":"DUP2"},{"begin":289,"end":315,"name":"DUP7"},{"begin":289,"end":315,"name":"DUP1"},{"begin":289,"end":315,"name":"EXTCODESIZE"},{"begin":289,"end":315,"name":"ISZERO"},{"begin":8,"end":17,"name":"DUP1"},{"begin":5,"end":7,"name":"ISZERO"},{"begin":5,"end":7,"name":"PUSH [tag]","value":"8"},{"begin":5,"end":7,"name":"JUMPI"},{"begin":30,"end":31,"name":"PUSH","value":"0"},{"begin":27,"end":28,"name":"DUP1"},{"begin":20,"end":32,"name":"REVERT"},{"begin":5,"end":7,"name":"tag","value":"8"},{"begin":5,"end":7,"name":"JUMPDEST"},{"begin":289,"end":315,"name":"POP"},{"begin":289,"end":315,"name":"GAS"},{"begin":289,"end":315,"name":"DELEGATECALL"},{"begin":289,"end":315,"name":"ISZERO"},{"begin":8,"end":17,"name":"DUP1"},{"begin":5,"end":7,"name":"ISZERO"},{"begin":5,"end":7,"name":"PUSH [tag]","value":"9"},{"begin":5,"end":7,"name":"JUMPI"},{"begin":45,"end":61,"name":"RETURNDATASIZE"},{"begin":42,"end":43,"name":"PUSH","value":"0"},{"begin":39,"end":40,"name":"DUP1"},{"begin":24,"end":62,"name":"RETURNDATACOPY"},{"begin":77,"end":93,"name":"RETURNDATASIZE"},{"begin":74,"end":75,"name":"PUSH","value":"0"},{"begin":67,"end":94,"name":"REVERT"},{"begin":5,"end":7,"name":"tag","value":"9"},{"begin":5,"end":7,"name":"JUMPDEST"},{"begin":289,"end":315,"name":"POP"},{"begin":289,"end":315,"name":"POP"},{"begin":289,"end":315,"name":"POP"},{"begin":289,"end":315,"name":"POP"},{"begin":289,"end":315,"name":"PUSH","value":"40"},{"begin":289,"end":315,"name":"MLOAD"},{"begin":289,"end":315,"name":"RETURNDATASIZE"},{"begin":13,"end":15,"name":"PUSH","value":"20"},{"begin":8,"end":11,"name":"DUP2"},{"begin":5,"end":16,"name":"LT"},{"begin":2,"end":4,"name":"ISZERO"},{"begin":2,"end":4,"name":"PUSH [tag]","value":"10"},{"begin":2,"end":4,"name":"JUMPI"},{"begin":29,"end":30,"name":"PUSH","value":"0"},{"begin":26,"end":27,"name":"DUP1"},{"begin":19,"end":31,"name":"REVERT"},{"begin":2,"end":4,"name":"tag","value":"10"},{"begin":2,"end":4,"name":"JUMPDEST"},{"begin":-1,"end":-1,"name":"POP"},{"begin":289,"end":315,"name":"MLOAD"},{"begin":289,"end":315,"name":"SWAP3"},{"begin":226,"end":326,"name":"SWAP2"},{"begin":-1,"end":-1,"name":"POP"},{"begin":-1,"end":-1,"name":"POP"},{"begin":226,"end":326,"name":"JUMP","value":"[out]"}]}}},"methodIdentifiers":{"f(uint8)":"3120d434"}},"metadata":"{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint8\"}],\"name\":\"f\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"MyContract\":\"NewContract\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MyContract\":{\"content\":\"\\n    import 'https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol';\\n\\n    library OldLibrary {\\n        function someFunction(uint8 a) public returns(bool);\\n    }\\n\\n    contract NewContract {\\n        function f(uint8 a) public returns (bool) {\\n            return OldLibrary.someFunction(a);\\n        }\\n    }\",\"keccak256\":\"0xb19840ed52e372aae26f38c308d49e3eb78c8b4ac9d71258be97c72289b63654\"},\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title SafeMath\\n * @dev Unsigned math operations with safety checks that revert on error\\n */\\nlibrary SafeMath {\\n    /**\\n    * @dev Multiplies two unsigned integers, reverts on overflow.\\n    */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b);\\n\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\\n    */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\\n    */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Adds two unsigned integers, reverts on overflow.\\n    */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a);\\n\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\\n    * reverts when dividing by zero.\\n    */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xa1422c4b355ded4f1b46e6022e56dbbf082c4ec2906a0fdd9520832343b2c907\"}},\"version\":1}","userdoc":{"methods":{}}},"OldLibrary":{"abi":[{"constant":false,"inputs":[{"name":"a","type":"uint8"}],"name":"someFunction","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"devdoc":{"methods":{}},"evm":{"assembly":"","bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"legacyAssembly":null,"methodIdentifiers":{"someFunction(uint8)":"5a64ce09"}},"metadata":"","userdoc":{"methods":{}}}},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Unsigned math operations with safety checks that revert on error","methods":{},"title":"SafeMath"},"evm":{"assembly":"    /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol\":125:1851   */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x00\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x00\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x00\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol\":125:1851   */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820bad828559143d43fe2b0b8b447338d22697bc00156356742fddec1114e594a660029\n}\n","bytecode":{"linkReferences":{},"object":"604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820bad828559143d43fe2b0b8b447338d22697bc00156356742fddec1114e594a660029","opcodes":"PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xba 0xd8 0x28 SSTORE SWAP2 NUMBER 0xd4 EXTCODEHASH 0xe2 0xb0 0xb8 0xb4 0x47 CALLER DUP14 0x22 PUSH10 0x7BC00156356742FDDEC1 GT 0x4e MSIZE 0x4a PUSH7 0x290000000000 ","sourceMap":"125:1726:1:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"},"deployedBytecode":{"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820bad828559143d43fe2b0b8b447338d22697bc00156356742fddec1114e594a660029","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xba 0xd8 0x28 SSTORE SWAP2 NUMBER 0xd4 EXTCODEHASH 0xe2 0xb0 0xb8 0xb4 0x47 CALLER DUP14 0x22 PUSH10 0x7BC00156356742FDDEC1 GT 0x4e MSIZE 0x4a PUSH7 0x290000000000 ","sourceMap":"125:1726:1:-;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"15200","executionCost":"116","totalCost":"15316"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","mod(uint256,uint256)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite"}},"legacyAssembly":{".code":[{"begin":125,"end":1851,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":125,"end":1851,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":132,"end":134,"name":"PUSH","value":"B"},{"begin":166,"end":173,"name":"DUP3"},{"begin":155,"end":164,"name":"DUP3"},{"begin":146,"end":153,"name":"DUP3"},{"begin":137,"end":174,"name":"CODECOPY"},{"begin":252,"end":259,"name":"DUP1"},{"begin":246,"end":260,"name":"MLOAD"},{"begin":243,"end":244,"name":"PUSH","value":"0"},{"begin":238,"end":261,"name":"BYTE"},{"begin":232,"end":236,"name":"PUSH","value":"73"},{"begin":229,"end":262,"name":"EQ"},{"begin":270,"end":271,"name":"PUSH","value":"0"},{"begin":265,"end":285,"name":"DUP2"},{"begin":265,"end":285,"name":"EQ"},{"begin":265,"end":285,"name":"PUSH [tag]","value":"2"},{"begin":265,"end":285,"name":"JUMPI"},{"begin":222,"end":285,"name":"PUSH [tag]","value":"1"},{"begin":222,"end":285,"name":"JUMP"},{"begin":265,"end":285,"name":"tag","value":"2"},{"begin":265,"end":285,"name":"JUMPDEST"},{"begin":274,"end":283,"name":"INVALID"},{"begin":222,"end":285,"name":"tag","value":"1"},{"begin":222,"end":285,"name":"JUMPDEST"},{"begin":222,"end":285,"name":"POP"},{"begin":298,"end":307,"name":"ADDRESS"},{"begin":295,"end":296,"name":"PUSH","value":"0"},{"begin":288,"end":308,"name":"MSTORE"},{"begin":328,"end":332,"name":"PUSH","value":"73"},{"begin":319,"end":326,"name":"DUP2"},{"begin":311,"end":333,"name":"MSTORE8"},{"begin":352,"end":359,"name":"DUP3"},{"begin":343,"end":350,"name":"DUP2"},{"begin":336,"end":360,"name":"RETURN"}],".data":{"0":{".auxdata":"a165627a7a72305820bad828559143d43fe2b0b8b447338d22697bc00156356742fddec1114e594a660029",".code":[{"begin":125,"end":1851,"name":"PUSHDEPLOYADDRESS"},{"begin":125,"end":1851,"name":"ADDRESS"},{"begin":125,"end":1851,"name":"EQ"},{"begin":125,"end":1851,"name":"PUSH","value":"80"},{"begin":125,"end":1851,"name":"PUSH","value":"40"},{"begin":125,"end":1851,"name":"MSTORE"},{"begin":125,"end":1851,"name":"PUSH","value":"0"},{"begin":125,"end":1851,"name":"DUP1"},{"begin":125,"end":1851,"name":"REVERT"}]}}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Unsigned math operations with safety checks that revert on error\",\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\n/**\\n * @title SafeMath\\n * @dev Unsigned math operations with safety checks that revert on error\\n */\\nlibrary SafeMath {\\n    /**\\n    * @dev Multiplies two unsigned integers, reverts on overflow.\\n    */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b);\\n\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\\n    */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\\n    */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Adds two unsigned integers, reverts on overflow.\\n    */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a);\\n\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\\n    * reverts when dividing by zero.\\n    */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xa1422c4b355ded4f1b46e6022e56dbbf082c4ec2906a0fdd9520832343b2c907\"}},\"version\":1}","userdoc":{"methods":{}}}}},"errors":[{"component":"general","formattedMessage":"MyContract:2:5: Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.5.2;\"\n    import 'https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol';\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.5.2;\"","severity":"warning","sourceLocation":{"end":332,"file":"MyContract","start":5},"type":"Warning"}],"sources":{"MyContract":{"ast":{"absolutePath":"MyContract","exportedSymbols":{"NewContract":[23],"OldLibrary":[9]},"id":24,"nodeType":"SourceUnit","nodes":[{"absolutePath":"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol","file":"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol","id":1,"nodeType":"ImportDirective","scope":24,"sourceUnit":152,"src":"5:91:0","symbolAliases":[],"unitAlias":""},{"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":null,"fullyImplemented":false,"id":9,"linearizedBaseContracts":[9],"name":"OldLibrary","nodeType":"ContractDefinition","nodes":[{"body":null,"documentation":null,"id":8,"implemented":false,"kind":"function","modifiers":[],"name":"someFunction","nodeType":"FunctionDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3,"name":"a","nodeType":"VariableDeclaration","scope":8,"src":"153:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2,"name":"uint8","nodeType":"ElementaryTypeName","src":"153:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"152:9:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"name":"","nodeType":"VariableDeclaration","scope":8,"src":"177:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5,"name":"bool","nodeType":"ElementaryTypeName","src":"177:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"176:6:0"},"scope":9,"src":"131:52:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":24,"src":"102:87:0"},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":23,"linearizedBaseContracts":[23],"name":"NewContract","nodeType":"ContractDefinition","nodes":[{"body":{"id":21,"nodeType":"Block","src":"268:58:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":18,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"313:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"argumentTypes":null,"id":16,"name":"OldLibrary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"289:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OldLibrary_$9_$","typeString":"type(library OldLibrary)"}},"id":17,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"someFunction","nodeType":"MemberAccess","referencedDeclaration":8,"src":"289:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_uint8_$returns$_t_bool_$","typeString":"function (uint8) returns (bool)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"289:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":15,"id":20,"nodeType":"Return","src":"282:33:0"}]},"documentation":null,"id":22,"implemented":true,"kind":"function","modifiers":[],"name":"f","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"name":"a","nodeType":"VariableDeclaration","scope":22,"src":"237:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10,"name":"uint8","nodeType":"ElementaryTypeName","src":"237:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"236:9:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"name":"","nodeType":"VariableDeclaration","scope":22,"src":"262:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13,"name":"bool","nodeType":"ElementaryTypeName","src":"262:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"261:6:0"},"scope":23,"src":"226:100:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":24,"src":"195:137:0"}],"src":"5:327:0"},"id":0,"legacyAST":{"attributes":{"absolutePath":"MyContract","exportedSymbols":{"NewContract":[23],"OldLibrary":[9]}},"children":[{"attributes":{"SourceUnit":152,"absolutePath":"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol","file":"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol","scope":24,"symbolAliases":[null],"unitAlias":""},"id":1,"name":"ImportDirective","src":"5:91:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":null,"fullyImplemented":false,"linearizedBaseContracts":[9],"name":"OldLibrary","scope":24},"children":[{"attributes":{"body":null,"documentation":null,"implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"someFunction","scope":9,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":8,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":2,"name":"ElementaryTypeName","src":"153:5:0"}],"id":3,"name":"VariableDeclaration","src":"153:7:0"}],"id":4,"name":"ParameterList","src":"152:9:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":8,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":5,"name":"ElementaryTypeName","src":"177:4:0"}],"id":6,"name":"VariableDeclaration","src":"177:4:0"}],"id":7,"name":"ParameterList","src":"176:6:0"}],"id":8,"name":"FunctionDefinition","src":"131:52:0"}],"id":9,"name":"ContractDefinition","src":"102:87:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[23],"name":"NewContract","scope":24},"children":[{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"f","scope":23,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":22,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":10,"name":"ElementaryTypeName","src":"237:5:0"}],"id":11,"name":"VariableDeclaration","src":"237:7:0"}],"id":12,"name":"ParameterList","src":"236:9:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":22,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":13,"name":"ElementaryTypeName","src":"262:4:0"}],"id":14,"name":"VariableDeclaration","src":"262:4:0"}],"id":15,"name":"ParameterList","src":"261:6:0"},{"children":[{"attributes":{"functionReturnParameters":15},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"someFunction","referencedDeclaration":8,"type":"function (uint8) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"type(library OldLibrary)","value":"OldLibrary"},"id":16,"name":"Identifier","src":"289:10:0"}],"id":17,"name":"MemberAccess","src":"289:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":11,"type":"uint8","value":"a"},"id":18,"name":"Identifier","src":"313:1:0"}],"id":19,"name":"FunctionCall","src":"289:26:0"}],"id":20,"name":"Return","src":"282:33:0"}],"id":21,"name":"Block","src":"268:58:0"}],"id":22,"name":"FunctionDefinition","src":"226:100:0"}],"id":23,"name":"ContractDefinition","src":"195:137:0"}],"id":24,"name":"SourceUnit","src":"5:327:0"}},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol":{"ast":{"absolutePath":"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol","exportedSymbols":{"SafeMath":[151]},"id":152,"nodeType":"SourceUnit","nodes":[{"id":25,"literals":["solidity","^","0.5",".2"],"nodeType":"PragmaDirective","src":"0:23:1"},{"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":"@title SafeMath\n@dev Unsigned math operations with safety checks that revert on error","fullyImplemented":true,"id":151,"linearizedBaseContracts":[151],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":57,"nodeType":"Block","src":"296:354:1","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":34,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"527:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":35,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"532:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"527:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":40,"nodeType":"IfStatement","src":"523:45:1","trueBody":{"id":39,"nodeType":"Block","src":"535:33:1","statements":[{"expression":{"argumentTypes":null,"hexValue":"30","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"556:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":33,"id":38,"nodeType":"Return","src":"549:8:1"}]}},{"assignments":[42],"declarations":[{"constant":false,"id":42,"name":"c","nodeType":"VariableDeclaration","scope":57,"src":"578:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":46,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":43,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"590:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":44,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"594:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"590:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"578:17:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":50,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":48,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"613:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":49,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"617:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"613:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":51,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"622:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"613:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":47,"name":"require","nodeType":"Identifier","overloadedDeclarations":[169,170],"referencedDeclaration":169,"src":"605:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"605:19:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"605:19:1"},{"expression":{"argumentTypes":null,"id":55,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"642:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":33,"id":56,"nodeType":"Return","src":"635:8:1"}]},"documentation":"@dev Multiplies two unsigned integers, reverts on overflow.","id":58,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"name":"a","nodeType":"VariableDeclaration","scope":58,"src":"242:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"242:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":29,"name":"b","nodeType":"VariableDeclaration","scope":58,"src":"253:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"253:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"241:22:1"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"name":"","nodeType":"VariableDeclaration","scope":58,"src":"287:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"287:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"286:9:1"},"scope":151,"src":"229:421:1","stateMutability":"pure","superFunction":null,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"845:229:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":68,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"929:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":69,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"933:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"929:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":67,"name":"require","nodeType":"Identifier","overloadedDeclarations":[169,170],"referencedDeclaration":169,"src":"921:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"921:14:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":72,"nodeType":"ExpressionStatement","src":"921:14:1"},{"assignments":[74],"declarations":[{"constant":false,"id":74,"name":"c","nodeType":"VariableDeclaration","scope":81,"src":"945:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"945:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":78,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":75,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"957:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":76,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"961:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"957:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"945:17:1"},{"expression":{"argumentTypes":null,"id":79,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"1066:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":66,"id":80,"nodeType":"Return","src":"1059:8:1"}]},"documentation":"@dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.","id":82,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"name":"a","nodeType":"VariableDeclaration","scope":82,"src":"791:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"791:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":62,"name":"b","nodeType":"VariableDeclaration","scope":82,"src":"802:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61,"name":"uint256","nodeType":"ElementaryTypeName","src":"802:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"790:22:1"},"returnParameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"name":"","nodeType":"VariableDeclaration","scope":82,"src":"836:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"835:9:1"},"scope":151,"src":"778:296:1","stateMutability":"pure","superFunction":null,"visibility":"internal"},{"body":{"id":105,"nodeType":"Block","src":"1272:78:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":92,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"1290:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":93,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1295:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1290:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":91,"name":"require","nodeType":"Identifier","overloadedDeclarations":[169,170],"referencedDeclaration":169,"src":"1282:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1282:15:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"1282:15:1"},{"assignments":[98],"declarations":[{"constant":false,"id":98,"name":"c","nodeType":"VariableDeclaration","scope":105,"src":"1307:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":102,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":99,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1319:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":100,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"1323:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1319:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1307:17:1"},{"expression":{"argumentTypes":null,"id":103,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"1342:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":90,"id":104,"nodeType":"Return","src":"1335:8:1"}]},"documentation":"@dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).","id":106,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"name":"a","nodeType":"VariableDeclaration","scope":106,"src":"1218:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"1218:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":86,"name":"b","nodeType":"VariableDeclaration","scope":106,"src":"1229:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":85,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:22:1"},"returnParameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"name":"","nodeType":"VariableDeclaration","scope":106,"src":"1263:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1262:9:1"},"scope":151,"src":"1205:145:1","stateMutability":"pure","superFunction":null,"visibility":"internal"},{"body":{"id":129,"nodeType":"Block","src":"1498:78:1","statements":[{"assignments":[116],"declarations":[{"constant":false,"id":116,"name":"c","nodeType":"VariableDeclaration","scope":129,"src":"1508:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":115,"name":"uint256","nodeType":"ElementaryTypeName","src":"1508:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":120,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":117,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"1520:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":118,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"1524:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1520:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1508:17:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":122,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"1543:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":123,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"1548:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1543:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":121,"name":"require","nodeType":"Identifier","overloadedDeclarations":[169,170],"referencedDeclaration":169,"src":"1535:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1535:15:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":126,"nodeType":"ExpressionStatement","src":"1535:15:1"},{"expression":{"argumentTypes":null,"id":127,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"1568:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":114,"id":128,"nodeType":"Return","src":"1561:8:1"}]},"documentation":"@dev Adds two unsigned integers, reverts on overflow.","id":130,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"name":"a","nodeType":"VariableDeclaration","scope":130,"src":"1444:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1444:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":110,"name":"b","nodeType":"VariableDeclaration","scope":130,"src":"1455:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1443:22:1"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"name":"","nodeType":"VariableDeclaration","scope":130,"src":"1489:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1489:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1488:9:1"},"scope":151,"src":"1431:145:1","stateMutability":"pure","superFunction":null,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"1795:54:1","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":140,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"1813:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1818:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1813:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":139,"name":"require","nodeType":"Identifier","overloadedDeclarations":[169,170],"referencedDeclaration":169,"src":"1805:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1805:15:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"ExpressionStatement","src":"1805:15:1"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"1837:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"id":146,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"1841:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1837:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":138,"id":148,"nodeType":"Return","src":"1830:12:1"}]},"documentation":"@dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\nreverts when dividing by zero.","id":150,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"name":"a","nodeType":"VariableDeclaration","scope":150,"src":"1741:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":134,"name":"b","nodeType":"VariableDeclaration","scope":150,"src":"1752:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1740:22:1"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"name":"","nodeType":"VariableDeclaration","scope":150,"src":"1786:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1786:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1785:9:1"},"scope":151,"src":"1728:121:1","stateMutability":"pure","superFunction":null,"visibility":"internal"}],"scope":152,"src":"125:1726:1"}],"src":"0:1852:1"},"id":1,"legacyAST":{"attributes":{"absolutePath":"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol","exportedSymbols":{"SafeMath":[151]}},"children":[{"attributes":{"literals":["solidity","^","0.5",".2"]},"id":25,"name":"PragmaDirective","src":"0:23:1"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title SafeMath\n@dev Unsigned math operations with safety checks that revert on error","fullyImplemented":true,"linearizedBaseContracts":[151],"name":"SafeMath","scope":152},"children":[{"attributes":{"documentation":"@dev Multiplies two unsigned integers, reverts on overflow.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"mul","scope":151,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":58,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":26,"name":"ElementaryTypeName","src":"242:7:1"}],"id":27,"name":"VariableDeclaration","src":"242:9:1"},{"attributes":{"constant":false,"name":"b","scope":58,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":28,"name":"ElementaryTypeName","src":"253:7:1"}],"id":29,"name":"VariableDeclaration","src":"253:9:1"}],"id":30,"name":"ParameterList","src":"241:22:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":58,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":31,"name":"ElementaryTypeName","src":"287:7:1"}],"id":32,"name":"VariableDeclaration","src":"287:7:1"}],"id":33,"name":"ParameterList","src":"286:9:1"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":27,"type":"uint256","value":"a"},"id":34,"name":"Identifier","src":"527:1:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":35,"name":"Literal","src":"532:1:1"}],"id":36,"name":"BinaryOperation","src":"527:6:1"},{"children":[{"attributes":{"functionReturnParameters":33},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":37,"name":"Literal","src":"556:1:1"}],"id":38,"name":"Return","src":"549:8:1"}],"id":39,"name":"Block","src":"535:33:1"}],"id":40,"name":"IfStatement","src":"523:45:1"},{"attributes":{"assignments":[42]},"children":[{"attributes":{"constant":false,"name":"c","scope":57,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":41,"name":"ElementaryTypeName","src":"578:7:1"}],"id":42,"name":"VariableDeclaration","src":"578:9:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":27,"type":"uint256","value":"a"},"id":43,"name":"Identifier","src":"590:1:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":29,"type":"uint256","value":"b"},"id":44,"name":"Identifier","src":"594:1:1"}],"id":45,"name":"BinaryOperation","src":"590:5:1"}],"id":46,"name":"VariableDeclarationStatement","src":"578:17:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[169,170],"referencedDeclaration":169,"type":"function (bool) pure","value":"require"},"id":47,"name":"Identifier","src":"605:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":42,"type":"uint256","value":"c"},"id":48,"name":"Identifier","src":"613:1:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":27,"type":"uint256","value":"a"},"id":49,"name":"Identifier","src":"617:1:1"}],"id":50,"name":"BinaryOperation","src":"613:5:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":29,"type":"uint256","value":"b"},"id":51,"name":"Identifier","src":"622:1:1"}],"id":52,"name":"BinaryOperation","src":"613:10:1"}],"id":53,"name":"FunctionCall","src":"605:19:1"}],"id":54,"name":"ExpressionStatement","src":"605:19:1"},{"attributes":{"functionReturnParameters":33},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":42,"type":"uint256","value":"c"},"id":55,"name":"Identifier","src":"642:1:1"}],"id":56,"name":"Return","src":"635:8:1"}],"id":57,"name":"Block","src":"296:354:1"}],"id":58,"name":"FunctionDefinition","src":"229:421:1"},{"attributes":{"documentation":"@dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"div","scope":151,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":82,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":59,"name":"ElementaryTypeName","src":"791:7:1"}],"id":60,"name":"VariableDeclaration","src":"791:9:1"},{"attributes":{"constant":false,"name":"b","scope":82,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":61,"name":"ElementaryTypeName","src":"802:7:1"}],"id":62,"name":"VariableDeclaration","src":"802:9:1"}],"id":63,"name":"ParameterList","src":"790:22:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":82,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":64,"name":"ElementaryTypeName","src":"836:7:1"}],"id":65,"name":"VariableDeclaration","src":"836:7:1"}],"id":66,"name":"ParameterList","src":"835:9:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[169,170],"referencedDeclaration":169,"type":"function (bool) pure","value":"require"},"id":67,"name":"Identifier","src":"921:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":62,"type":"uint256","value":"b"},"id":68,"name":"Identifier","src":"929:1:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":69,"name":"Literal","src":"933:1:1"}],"id":70,"name":"BinaryOperation","src":"929:5:1"}],"id":71,"name":"FunctionCall","src":"921:14:1"}],"id":72,"name":"ExpressionStatement","src":"921:14:1"},{"attributes":{"assignments":[74]},"children":[{"attributes":{"constant":false,"name":"c","scope":81,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":73,"name":"ElementaryTypeName","src":"945:7:1"}],"id":74,"name":"VariableDeclaration","src":"945:9:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":60,"type":"uint256","value":"a"},"id":75,"name":"Identifier","src":"957:1:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":62,"type":"uint256","value":"b"},"id":76,"name":"Identifier","src":"961:1:1"}],"id":77,"name":"BinaryOperation","src":"957:5:1"}],"id":78,"name":"VariableDeclarationStatement","src":"945:17:1"},{"attributes":{"functionReturnParameters":66},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":74,"type":"uint256","value":"c"},"id":79,"name":"Identifier","src":"1066:1:1"}],"id":80,"name":"Return","src":"1059:8:1"}],"id":81,"name":"Block","src":"845:229:1"}],"id":82,"name":"FunctionDefinition","src":"778:296:1"},{"attributes":{"documentation":"@dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"sub","scope":151,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":106,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":83,"name":"ElementaryTypeName","src":"1218:7:1"}],"id":84,"name":"VariableDeclaration","src":"1218:9:1"},{"attributes":{"constant":false,"name":"b","scope":106,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":85,"name":"ElementaryTypeName","src":"1229:7:1"}],"id":86,"name":"VariableDeclaration","src":"1229:9:1"}],"id":87,"name":"ParameterList","src":"1217:22:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":106,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":88,"name":"ElementaryTypeName","src":"1263:7:1"}],"id":89,"name":"VariableDeclaration","src":"1263:7:1"}],"id":90,"name":"ParameterList","src":"1262:9:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[169,170],"referencedDeclaration":169,"type":"function (bool) pure","value":"require"},"id":91,"name":"Identifier","src":"1282:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":86,"type":"uint256","value":"b"},"id":92,"name":"Identifier","src":"1290:1:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":84,"type":"uint256","value":"a"},"id":93,"name":"Identifier","src":"1295:1:1"}],"id":94,"name":"BinaryOperation","src":"1290:6:1"}],"id":95,"name":"FunctionCall","src":"1282:15:1"}],"id":96,"name":"ExpressionStatement","src":"1282:15:1"},{"attributes":{"assignments":[98]},"children":[{"attributes":{"constant":false,"name":"c","scope":105,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":97,"name":"ElementaryTypeName","src":"1307:7:1"}],"id":98,"name":"VariableDeclaration","src":"1307:9:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":84,"type":"uint256","value":"a"},"id":99,"name":"Identifier","src":"1319:1:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":86,"type":"uint256","value":"b"},"id":100,"name":"Identifier","src":"1323:1:1"}],"id":101,"name":"BinaryOperation","src":"1319:5:1"}],"id":102,"name":"VariableDeclarationStatement","src":"1307:17:1"},{"attributes":{"functionReturnParameters":90},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":98,"type":"uint256","value":"c"},"id":103,"name":"Identifier","src":"1342:1:1"}],"id":104,"name":"Return","src":"1335:8:1"}],"id":105,"name":"Block","src":"1272:78:1"}],"id":106,"name":"FunctionDefinition","src":"1205:145:1"},{"attributes":{"documentation":"@dev Adds two unsigned integers, reverts on overflow.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"add","scope":151,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":130,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":107,"name":"ElementaryTypeName","src":"1444:7:1"}],"id":108,"name":"VariableDeclaration","src":"1444:9:1"},{"attributes":{"constant":false,"name":"b","scope":130,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":109,"name":"ElementaryTypeName","src":"1455:7:1"}],"id":110,"name":"VariableDeclaration","src":"1455:9:1"}],"id":111,"name":"ParameterList","src":"1443:22:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":130,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":112,"name":"ElementaryTypeName","src":"1489:7:1"}],"id":113,"name":"VariableDeclaration","src":"1489:7:1"}],"id":114,"name":"ParameterList","src":"1488:9:1"},{"children":[{"attributes":{"assignments":[116]},"children":[{"attributes":{"constant":false,"name":"c","scope":129,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":115,"name":"ElementaryTypeName","src":"1508:7:1"}],"id":116,"name":"VariableDeclaration","src":"1508:9:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":108,"type":"uint256","value":"a"},"id":117,"name":"Identifier","src":"1520:1:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":110,"type":"uint256","value":"b"},"id":118,"name":"Identifier","src":"1524:1:1"}],"id":119,"name":"BinaryOperation","src":"1520:5:1"}],"id":120,"name":"VariableDeclarationStatement","src":"1508:17:1"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[169,170],"referencedDeclaration":169,"type":"function (bool) pure","value":"require"},"id":121,"name":"Identifier","src":"1535:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":116,"type":"uint256","value":"c"},"id":122,"name":"Identifier","src":"1543:1:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":108,"type":"uint256","value":"a"},"id":123,"name":"Identifier","src":"1548:1:1"}],"id":124,"name":"BinaryOperation","src":"1543:6:1"}],"id":125,"name":"FunctionCall","src":"1535:15:1"}],"id":126,"name":"ExpressionStatement","src":"1535:15:1"},{"attributes":{"functionReturnParameters":114},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":116,"type":"uint256","value":"c"},"id":127,"name":"Identifier","src":"1568:1:1"}],"id":128,"name":"Return","src":"1561:8:1"}],"id":129,"name":"Block","src":"1498:78:1"}],"id":130,"name":"FunctionDefinition","src":"1431:145:1"},{"attributes":{"documentation":"@dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\nreverts when dividing by zero.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"mod","scope":151,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":150,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":131,"name":"ElementaryTypeName","src":"1741:7:1"}],"id":132,"name":"VariableDeclaration","src":"1741:9:1"},{"attributes":{"constant":false,"name":"b","scope":150,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":133,"name":"ElementaryTypeName","src":"1752:7:1"}],"id":134,"name":"VariableDeclaration","src":"1752:9:1"}],"id":135,"name":"ParameterList","src":"1740:22:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":150,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":136,"name":"ElementaryTypeName","src":"1786:7:1"}],"id":137,"name":"VariableDeclaration","src":"1786:7:1"}],"id":138,"name":"ParameterList","src":"1785:9:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[169,170],"referencedDeclaration":169,"type":"function (bool) pure","value":"require"},"id":139,"name":"Identifier","src":"1805:7:1"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":134,"type":"uint256","value":"b"},"id":140,"name":"Identifier","src":"1813:1:1"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":141,"name":"Literal","src":"1818:1:1"}],"id":142,"name":"BinaryOperation","src":"1813:6:1"}],"id":143,"name":"FunctionCall","src":"1805:15:1"}],"id":144,"name":"ExpressionStatement","src":"1805:15:1"},{"attributes":{"functionReturnParameters":138},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":132,"type":"uint256","value":"a"},"id":145,"name":"Identifier","src":"1837:1:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":134,"type":"uint256","value":"b"},"id":146,"name":"Identifier","src":"1841:1:1"}],"id":147,"name":"BinaryOperation","src":"1837:5:1"}],"id":148,"name":"Return","src":"1830:12:1"}],"id":149,"name":"Block","src":"1795:54:1"}],"id":150,"name":"FunctionDefinition","src":"1728:121:1"}],"id":151,"name":"ContractDefinition","src":"125:1726:1"}],"id":152,"name":"SourceUnit","src":"0:1852:1"}}}}
